# Generated by Django 5.0.2 on 2024-02-12 12:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("school", "0001_initial"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="student",
            name="teacher",
        ),
        migrations.AlterField(
            model_name="student",
            name="group",
            field=models.CharField(max_length=10, verbose_name="Класс"),
        ),
        migrations.AlterField(
            model_name="student",
            name="name",
            field=models.CharField(max_length=30, verbose_name="Имя"),
        ),
        migrations.AlterField(
            model_name="teacher",
            name="name",
            field=models.CharField(max_length=30, verbose_name="Имя"),
        ),
        migrations.AlterField(
            model_name="teacher",
            name="subject",
            field=models.CharField(max_length=10, verbose_name="Предмет"),
        ),
        migrations.CreateModel(
            name="TeacherStudent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="school.student"
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="students_teachers",
                        to="school.teacher",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="student",
            name="teachers",
            field=models.ManyToManyField(
                related_name="students",
                through="school.TeacherStudent",
                to="school.teacher",
            ),
        ),
    ]
